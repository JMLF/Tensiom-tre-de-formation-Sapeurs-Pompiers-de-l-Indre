/*
 * PROJECT:   LVGL PC Simulator using Visual Studio
 * FILE:      LVGL.Simulator.cpp
 * PURPOSE:   Implementation for LVGL ported to Windows Desktop
 *
 * LICENSE:   The MIT License
 *
 * DEVELOPER: Mouri_Naruto (Mouri_Naruto AT Outlook.com)
 */

#include <Windows.h>

#include "resource.h"

#if _MSC_VER >= 1200
 // Disable compilation warnings.
#pragma warning(push)
// nonstandard extension used : bit field types other than int
#pragma warning(disable:4214)
// 'conversion' conversion from 'type1' to 'type2', possible loss of data
#pragma warning(disable:4244)
#endif

#include "lvgl/lvgl.h"
#include "lvgl/examples/lv_examples.h"
#include "lvgl/demos/lv_demos.h"
#include "lv_drivers/win32drv/win32drv.h"
//#include "../../../Tensiom-tre-de-formation-Sapeurs-Pompiers-de-l-Indre/Telecommande etudiant 1/Client Tcp/ClasseClient.h"

#if _MSC_VER >= 1200
// Restore compilation warnings.
#pragma warning(pop)
#endif
#include<string>
#include <stdio.h>
#include "Fonction.h"
#include <iostream>
#include <fstream>
#include<filesystem>

//bool connexion;
//
//
//void my_timer_Ping(lv_timer_t* timer) {
//    std::string cmd("ping 10.187.52.43 -n 1");
//    std::string repPing = exec(cmd.c_str());
//    if (repPing.size() > 300) {
//        connexion = true;
//    }
//    else connexion = false;
//}
////taille = 217 quand faut
////taille >300 = ok
int main()
{
    lv_init();

    if (!lv_win32_init(
        GetModuleHandleW(NULL),
        SW_SHOW,
        320,
        480,
        LoadIconW(GetModuleHandleW(NULL), MAKEINTRESOURCE(IDI_LVGL))))
    {
        return -1;
    }
    
    lv_win32_add_all_input_devices_to_group(NULL);

    initialisation();
   SecurityPage();

    
    
   
  
    while (!lv_win32_quit_signal)
    {
        
        
        
        lv_task_handler();
        Sleep(2);
    }

    return 0;
}
